var width = 80
var height = 40
var x_min = -2
var x_max = 1
var y_min = -1
var y_max = 1
var max_iter = 50

fun sqrt <- x begin
    var z = 1

    for var i = 0; i <= 10; i = i + 1 do
        z = z - ( ( z * z - x ) / (2 * z) )

    return z
end

for var y = 0; y < height; y = y + 1
begin
    var c_im = y_min + ( y / height ) * ( y_max - y_min )

    for var x = 0; x < width; x = x + 1
    begin
        var c_re = x_min + ( x / width ) * ( x_max - x_min )

        // perform the mandelbrot set iteration
        var i
        var z_re = 0
        var z_im = 0
        var char = " "

        for i = 0; i <= max_iter; i = i + 1
        begin
            var z_re_new = ( z_re * z_re ) - ( z_im * z_im ) + c_re
            var z_im_new = 2 * z_re * z_im + c_im

            if sqrt(( z_re_new * z_re_new ) + ( z_im_new * z_im_new )) > 2 then break

            z_re = z_re_new
            z_im = z_im_new
        end

            if i >= 1 and i < 5 then char = "."
            else
                if i >= 5 and i < 10 then char = ":"
                else
                    if i >= 10 and i < 15 then char = "o"
                    else
                        if i >= 15 and i < 20 then char = "O"
                        else
                            if i >= 20 and i < 25 then char = "8"
                            else
                                if i >= 25 and i < 30 then char = "#"
                                else
                                    if i >= 30 and i < 35 then char = "@"
                                    else char = "X" 
        print(char)
    end
    print("\n")
end